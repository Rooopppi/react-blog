{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/message.js","reducers/theme.js","reducers/rootReducer.js","store.js","utils/global.js","api/inst.jsx","api/auth-service.js","actions/auth.js","components/Header/Header.styled.js","components/Header/Header.jsx","style/Warn.styled.js","style/Input.styled.js","components/CustomInputComponent/CustomInputComponent.jsx","style/Button.styled.js","style/FormWrapper.styled.js","style/Title.styled.js","style/FormEntry.styled.js","style/InputWrapper.styled.js","pages/Login.jsx","pages/Signup.jsx","components/Post/Post.styled.js","style/Post.styled.js","components/Post/Post.jsx","components/PaginatedPosts/PaginatedPosts.styled.js","components/PaginatedPosts/PaginatedPosts.jsx","api/posts-service.js","style/TextArea.styled.js","components/CustomTextArea.jsx","utils/getAllPostsOrdered.js","constants/common.js","components/AddPost.jsx","style/Wrapper.styled.js","style/NotLoggedMessage.styled.js","style/Container.styled.js","pages/Home/Home.styled.js","pages/Home/Home.jsx","api/comment-service.js","components/addComment/addComment.styled.js","components/addComment/addComment.jsx","style/Services.styled.js","pages/SinglePost/SinglePost.styled.js","components/Comment/Comment.js","components/Comment/Comments.jsx","pages/SinglePost/SinglePost.jsx","api/user-service.js","components/EditProfile.jsx","style/UserAvatar.styled.js","style/UserInfo.styled.js","pages/Profile/Profile.styled.js","pages/Profile/Profile.jsx","pages/UsersList.jsx","utils/PrivateRoute.jsx","style/global.js","style/themes.js","components/App/App.jsx","actions/theme.js","index.jsx"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","GET_USER_SUCCESS","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","DARK_THEME","LIGHT_THEME","token","localStorage","getItem","JSON","parse","id","email","name","initialState","isLoggedIn","authReducer","state","action","type","payload","_id","messageReducer","message","theme","themeReducer","setItem","combineReducers","auth","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","setToStorage","keyName","key","instance","axios","create","baseURL","process","interceptors","request","use","config","headers","Authorization","error","console","log","Promise","reject","notify","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","response","password","post","get","removeItem","getUser","dispatch","AuthService","then","stringify","data","resolve","logout","StyledHeader","styled","header","props","LinkItem","div","Links","Header","useSelector","useDispatch","to","as","href","onClick","Warn","Input","input","backgroundDark","marginRight","CustomInputComponent","field","form","touched","errors","Button","button","fontColor","width","fontSize","FormWrapper","Title","h1","hover","FormEntry","InputWrapper","SigninSchema","Yup","shape","required","min","max","Login","initialValues","validationSchema","onSubmit","values","component","placeholder","className","SignupSchema","userName","Register","history","useHistory","push","PostDescr","PostMeta","PostDate","PostStyled","Post","title","description","dateCreated","postedBy","likes","length","PaginationStyled","PaginatedPosts","allPosts","search","sortKey","useState","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","useMemo","filter","toLowerCase","includes","slice","reverse","sort","a","b","pageCount","Math","ceil","map","breakLabel","nextLabel","onPageChange","event","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","getAllPosts","limit","skip","params","addPost","fullText","getSinglePost","postId","deletePost","delete","editPost","patch","likePost","put","uploadImage","imageData","formData","FormData","append","TextArea","textarea","CustomTextArea","getAllPostsOrdered","PostService","res","pagination","total","addPostSchema","AddPost","setPostData","setAllPosts","resetForm","method","Wrapper","NotLoggedMessage","Container","Operations","PostsToggle","SearchWrapper","Home","setSearch","setSortKey","useEffect","backgroundColor","backgroundHover","colorHover","value","onChange","e","target","hidden","getAllComments","addComment","text","followedCommentID","deleteComment","commentId","editComment","likeComment","AddCommentTitle","addCommentSchema","AddComment","setAllComments","setShowReply","setShowEdit","CommentService","Services","PostImage","ServicesWrapper","CommentStyled","comment","ReplyComment","Comments","commentedBy","allComments","isLiked","setIsLiked","showEdit","showReply","commentLikes","setCommentLikes","replyComments","SinglePost","postData","postLikes","setPostLikes","fileInput","createRef","post_id","match","postComments","image","src","alt","preventDefault","current","files","ref","userId","extraDetails","rest","extra_details","editProfileShema","details","profession","skills","EditProfile","UserService","UserAvatar","tr","UserInfo","table","UserData","UserDataWrapper","UserServices","Profile","avatar","useRef","UsersList","allUsers","setAllUsers","sorted","user","PrivateRoute","Component","render","pathname","from","location","GlobalStyle","createGlobalStyle","body","LightTheme","DarkTheme","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0737dae5.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const ADD_POST = \"ADD_POST\";\r\nexport const LIKE_POST = \"LIKE_POST\";\r\n\r\nexport const DARK_THEME = \"DARK_THEME\";\r\nexport const LIGHT_THEME = \"LIGHT_THEME\";\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  GET_USER_SUCCESS,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\nconst { email, id, name } = JSON.parse(localStorage.getItem(\"userData\")) || {\r\n  id: \"\",\r\n  email: \"\",\r\n  name: \"\",\r\n};\r\nconst initialState = token\r\n  ? { id, name, email, isLoggedIn: true }\r\n  : { id: null, name: null, email: null, isLoggedIn: false };\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case GET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        id: payload._id,\r\n        ...payload,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default messageReducer;\r\n","import { DARK_THEME, LIGHT_THEME } from \"../actions/types\";\r\n\r\nconst theme = localStorage.getItem(\"theme\");\r\n\r\nconst initialState = { theme };\r\n\r\nconst themeReducer = (state = initialState, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case DARK_THEME:\r\n      localStorage.setItem(\"theme\", \"Dark\");\r\n      return { theme: \"Dark\" };\r\n\r\n    case LIGHT_THEME:\r\n      localStorage.setItem(\"theme\", \"Light\");\r\n      return { theme: \"Light\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default themeReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport theme from \"./theme\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n  theme,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","export const getFromStorage = (key) => {\r\n  return localStorage.getItem(key) || null;\r\n};\r\n\r\nexport const setToStorage = (keyName, key) => {\r\n  localStorage.setItem(keyName, key);\r\n};\r\n","/* eslint-disable no-param-reassign */\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst baseURL = process.env.REACT_APP_API_URL;\r\nconst instance = axios.create({ baseURL });\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      return config;\r\n    }\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // eslint-disable-next-line no-console\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst notify = (error) => {\r\n  if (error) {\r\n    toast.error(error.message, {\r\n      position: \"bottom-right\",\r\n      autoClose: false,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  } else {\r\n    toast.success(\"Success!\", {\r\n      position: \"bottom-right\",\r\n      autoClose: 1000,\r\n      hideProgressBar: true,\r\n      closeOnClick: false,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n    });\r\n  }\r\n};\r\n\r\ninstance.interceptors.response.use(\r\n  (response) => {\r\n    notify();\r\n    return response;\r\n  },\r\n  (error) => {\r\n    notify(error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import axios from \"./inst\";\r\n\r\nconst register = (email, password, name) => {\r\n  return axios.post(\"/users\", {\r\n    email,\r\n    password,\r\n    name,\r\n  });\r\n};\r\n\r\nconst getUser = () => axios.get(\"/auth/user\");\r\n\r\nconst login = (email, password) => {\r\n  return axios.post(\"/auth\", {\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n};\r\n\r\nexport default {\r\n  register,\r\n  getUser,\r\n  login,\r\n  logout,\r\n};\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  GET_USER_SUCCESS,\r\n  LOGOUT,\r\n} from \"./types\";\r\nimport { setToStorage } from \"../utils/global\";\r\nimport AuthService from \"../api/auth-service\";\r\n\r\nexport const register = (email, password, name) => (dispatch) => {\r\n  return AuthService.register(email, password, name).then(\r\n    () => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    () => {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (email, password) => (dispatch) => {\r\n  return AuthService.login(email, password).then(\r\n    (response) => {\r\n      setToStorage(\"token\", response.data.token);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n      return Promise.resolve();\r\n    },\r\n    () => {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const getUser = () => (dispatch) => {\r\n  return AuthService.getUser().then(\r\n    (response) => {\r\n      setToStorage(\r\n        \"userData\",\r\n        JSON.stringify({\r\n          // eslint-disable-next-line no-underscore-dangle\r\n          id: response.data._id,\r\n          name: response.data.name,\r\n          email: response.data.email,\r\n        })\r\n      );\r\n      dispatch({\r\n        type: GET_USER_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n      return Promise.resolve();\r\n    },\r\n    () => {\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  background-color: ${(props) => props.theme.header};\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const LinkItem = styled.div`\r\n  margin: 0 10px;\r\n\r\n  &:hover {\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nexport const Links = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  max-width: 50%;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../../actions/auth\";\r\nimport { StyledHeader, LinkItem, Links } from \"./Header.styled\";\r\n\r\nfunction Header() {\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <StyledHeader>\r\n      <Links>\r\n        <Link to=\"/\">\r\n          <LinkItem>Home</LinkItem>\r\n        </Link>\r\n        <Link to=\"/profile\">\r\n          <LinkItem>Profile</LinkItem>\r\n        </Link>\r\n        <Link to=\"/users-list\">\r\n          <LinkItem>Users</LinkItem>\r\n        </Link>\r\n      </Links>\r\n      <Links>\r\n        {isLoggedIn ? (\r\n          <LinkItem as=\"a\" href=\"/login\" onClick={logOut}>\r\n            Logout\r\n          </LinkItem>\r\n        ) : (\r\n          <Link to=\"/login\">\r\n            <LinkItem>Login</LinkItem>\r\n          </Link>\r\n        )}\r\n\r\n        <Link to=\"/register\">\r\n          <LinkItem>Register</LinkItem>\r\n        </Link>\r\n      </Links>\r\n    </StyledHeader>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nconst Warn = styled.div`\r\n  background-color: red;\r\n  font-size: 14px;\r\n  border-radius: 20px;\r\n  width: fit-content;\r\n  padding: 3px 10px;\r\n  color: #c9d1d9;\r\n  margin: 9px 0 5px 10px;\r\n  font-weight: normal;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: 22px;\r\n    left: 19px;\r\n    border: 10px solid transparent;\r\n    border-bottom: 10px solid red;\r\n  }\r\n`;\r\n\r\nexport default Warn;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  padding: 10px;\r\n  background-color: ${(props) =>\r\n    props.backgroundDark ? \"#0d1117\" : \"#161b22\"};\r\n  border: none;\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  color: #c9d1d9;\r\n  margin-right: ${(props) => props.marginRight || \"0\"};\r\n`;\r\n\r\nexport default Input;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from \"react\";\r\nimport Warn from \"../../style/Warn.styled\";\r\nimport Input from \"../../style/Input.styled\";\r\n\r\nconst CustomInputComponent = ({\r\n  field,\r\n  form: { touched, errors },\r\n  backgroundDark,\r\n  ...props\r\n}) => (\r\n  <div>\r\n    <Input backgroundDark={backgroundDark} type=\"text\" {...field} {...props} />\r\n    {touched[field.name] && errors[field.name] && (\r\n      <Warn>{errors[field.name]}</Warn>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default CustomInputComponent;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  margin-top: 5px;\r\n  padding: 5px;\r\n  background-color: ${(props) => (props.styled ? \"#d1495b\" : \"transparent\")};\r\n  border: none;\r\n  color: ${(props) => props.theme.fontColor};\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  width: ${(props) => props.width || \"100%\"};\r\n  font-size: ${(props) => props.fontSize || \"14px\"};\r\n  height: fit-content;\r\n\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      props.styled ? \"rgb(228, 40, 40)\" : \"transparent\"};\r\n    color: ${(props) => (props.styled ? \"#c9d1d9\" : \"gray\")};\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst FormWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  min-height: 300px;\r\n  width: 300px;\r\n  background-color: ${(props) => props.theme.post};\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport default FormWrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst Title = styled.h1`\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  text-align: ${(props) => (props.styled ? \"center\" : \"normal\")};\r\n  &:hover {\r\n    color: ${(props) => (props.hover ? \"gray\" : \"#red\")};\r\n  }\r\n`;\r\n\r\nexport default Title;\r\n","import styled from \"styled-components\";\r\n\r\nconst FormEntry = styled.div`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default FormEntry;\r\n","import styled from \"styled-components\";\r\n\r\nconst InputWrapper = styled.div`\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  position: relative;\r\n`;\r\n\r\nexport default InputWrapper;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport CustomInputComponent from \"../components/CustomInputComponent/CustomInputComponent\";\r\nimport Button from \"../style/Button.styled\";\r\nimport FormWrapper from \"../style/FormWrapper.styled\";\r\nimport Title from \"../style/Title.styled\";\r\nimport FormEntry from \"../style/FormEntry.styled\";\r\nimport InputWrapper from \"../style/InputWrapper.styled\";\r\nimport Warn from \"../style/Warn.styled\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst SigninSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(30, \"Too Long!\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nfunction Login() {\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogin = (values) => {\r\n    dispatch(login(values.email, values.password));\r\n  };\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <FormEntry>\r\n        <Title>Login</Title>\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            password: \"\",\r\n          }}\r\n          validationSchema={SigninSchema}\r\n          onSubmit={handleLogin}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"email\"\r\n                  component={CustomInputComponent}\r\n                  placeholder=\"Enter email\"\r\n                  backgroundDark=\"backgroundDark\"\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  className=\"password\"\r\n                />\r\n                {errors.password && touched.password ? (\r\n                  <Warn>{errors.password}</Warn>\r\n                ) : null}\r\n              </InputWrapper>\r\n              <Button styled type=\"submit\">\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <span>or</span>\r\n        <Link to=\"/register\">\r\n          <Button styled type=\"button\">\r\n            Register\r\n          </Button>\r\n        </Link>\r\n\r\n        {isLoggedIn && <Redirect to=\"/profile\" />}\r\n      </FormEntry>\r\n    </FormWrapper>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport CustomInputComponent from \"../components/CustomInputComponent/CustomInputComponent\";\r\nimport { register } from \"../actions/auth\";\r\nimport Button from \"../style/Button.styled\";\r\nimport FormWrapper from \"../style/FormWrapper.styled\";\r\nimport Title from \"../style/Title.styled\";\r\nimport FormEntry from \"../style/FormEntry.styled\";\r\nimport InputWrapper from \"../style/InputWrapper.styled\";\r\nimport Warn from \"../style/Warn.styled\";\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  userName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(30, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(5, \"Too Short!\")\r\n    .max(30, \"Too Long!\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nfunction Register() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleRegister = (values) => {\r\n    dispatch(register(values.email, values.password, values.userName)).then(\r\n      () => {\r\n        history.push(\"/login\");\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <FormEntry>\r\n        <Title>Register</Title>\r\n        <Formik\r\n          initialValues={{\r\n            userName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={handleRegister}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"userName\"\r\n                  component={CustomInputComponent}\r\n                  placeholder=\"Enter username\"\r\n                  backgroundDark=\"backgroundDark\"\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"email\"\r\n                  component={CustomInputComponent}\r\n                  placeholder=\"Enter email\"\r\n                  backgroundDark=\"backgroundDark\"\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  className=\"password\"\r\n                />\r\n                {errors.password && touched.password ? (\r\n                  <Warn>{errors.password}</Warn>\r\n                ) : null}\r\n              </InputWrapper>\r\n              <Button styled type=\"submit\">\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n\r\n        <span>or</span>\r\n        <Link to=\"/login\">\r\n          <Button styled type=\"button\">\r\n            Login\r\n          </Button>\r\n        </Link>\r\n      </FormEntry>\r\n    </FormWrapper>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostTitle = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  &:hover {\r\n    color: gray;\r\n    transition-duration: 0.1s;\r\n  }\r\n`;\r\n\r\nexport const PostDescr = styled.div`\r\n  font-size: 18px;\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const PostMeta = styled.div`\r\n  color: gray;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const PostDate = styled.div`\r\n  text-align: end;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nconst PostStyled = styled.div`\r\n  background-color: ${(props) => props.theme.post};\r\n  margin-bottom: 20px;\r\n  padding: 15px;\r\n  border-radius: 20px;\r\n  p {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport default PostStyled;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PostDate, PostDescr, PostMeta } from \"./Post.styled\";\r\nimport PostStyled from \"../../style/Post.styled\";\r\nimport Title from \"../../style/Title.styled\";\r\n\r\nfunction Post({ _id, title, description, dateCreated, postedBy, likes }) {\r\n  return (\r\n    <PostStyled>\r\n      <div>\r\n        <Link to={`/posts/${_id}`}>\r\n          <Title styled hover>\r\n            {title}\r\n          </Title>\r\n        </Link>\r\n        <PostDescr>{description}</PostDescr>\r\n      </div>\r\n      <PostMeta>\r\n        <div>Posted by {postedBy || \"anon\"}</div>\r\n        <PostDate>Posted at {dateCreated}</PostDate>\r\n      </PostMeta>\r\n      <div>Likes {likes.length}</div>\r\n    </PostStyled>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import styled from \"styled-components\";\r\n\r\nconst PaginationStyled = styled.div`\r\n  margin-bottom: 10px;\r\n  ul {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n  }\r\n  a {\r\n    font-size: 18px;\r\n    margin-right: 10px;\r\n    border: 1px solid;\r\n    border-color: ${(props) => props.theme.fontColor};\r\n    padding: 3px 11px;\r\n    border-radius: 20px;\r\n    color: ${(props) => props.theme.fontColor};\r\n  }\r\n  .disabled a,\r\n  a:hover {\r\n    border-color: gray;\r\n    cursor: pointer;\r\n    color: gray;\r\n  }\r\n  .selected a {\r\n    border-color: #d1495b;\r\n    color: #d1495b;\r\n  }\r\n`;\r\n\r\nexport default PaginationStyled;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Post from \"../Post/Post\";\r\nimport PaginationStyled from \"./PaginatedPosts.styled\";\r\n\r\nconst PaginatedPosts = ({ allPosts, search, sortKey }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = useMemo(() => {\r\n    if (search) {\r\n      return allPosts.filter((post) =>\r\n        post.title.toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    return allPosts\r\n      .slice(indexOfFirstPost, indexOfLastPost)\r\n      .reverse()\r\n      .sort((a, b) => {\r\n        if (a[sortKey] > b[sortKey]) {\r\n          return -1;\r\n        }\r\n        if (a[sortKey] < b[sortKey]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n  }, [search, allPosts, indexOfFirstPost, indexOfLastPost, sortKey]);\r\n\r\n  const pageCount = Math.ceil(allPosts.length / postsPerPage);\r\n\r\n  const handlePageClick = (event) => {\r\n    setCurrentPage(event.selected + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"entry\">\r\n        {currentPosts.map((post) => {\r\n          return (\r\n            <Post\r\n              // eslint-disable-next-line no-underscore-dangle\r\n              key={post._id}\r\n              // eslint-disable-next-line react/jsx-props-no-spreading\r\n              {...post}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <PaginationStyled>\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={3}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n        />\r\n      </PaginationStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaginatedPosts;\r\n","import axios from \"./inst\";\r\n\r\nconst getAllPosts = (limit, skip, postedBy) => {\r\n  return axios.get(\"/posts\", { params: { postedBy, limit, skip } });\r\n};\r\n\r\nconst addPost = (title, description, fullText) => {\r\n  return axios.post(\"/posts\", {\r\n    title,\r\n    description,\r\n    fullText,\r\n  });\r\n};\r\n\r\nconst deletePost = (postId) => {\r\n  return axios.delete(`/posts/${postId}`);\r\n};\r\n\r\nconst editPost = (postId, title, description, fullText) => {\r\n  return axios.patch(`/posts/${postId}`, {\r\n    title,\r\n    description,\r\n    fullText,\r\n  });\r\n};\r\n\r\nconst likePost = (postId) => {\r\n  return axios.put(`/posts/like/${postId}`);\r\n};\r\n\r\nconst getSinglePost = (postId) => {\r\n  return axios.get(`/posts/${postId}`);\r\n};\r\n\r\nconst uploadImage = (postId, imageData) => {\r\n  const formData = new FormData();\r\n  formData.append(\"image\", imageData);\r\n  return axios.put(`/posts/upload/${postId}`, formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n\r\nexport default {\r\n  getAllPosts,\r\n  addPost,\r\n  getSinglePost,\r\n  deletePost,\r\n  editPost,\r\n  likePost,\r\n  uploadImage,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst TextArea = styled.textarea`\r\n  background-color: ${(props) =>\r\n    props.backgroundDark ? \"#0d1117\" : \"#161b22\"};\r\n  color: #c9d1d9;\r\n  border: none;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 20px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  min-height: 150px;\r\n`;\r\n\r\nexport default TextArea;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from \"react\";\r\nimport Warn from \"../style/Warn.styled\";\r\nimport TextArea from \"../style/TextArea.styled\";\r\n\r\nconst CustomTextArea = ({\r\n  field,\r\n  form: { touched, errors },\r\n  backgroundDark,\r\n  ...props\r\n}) => (\r\n  <div>\r\n    <TextArea\r\n      type=\"text\"\r\n      backgroundDark={backgroundDark}\r\n      {...field}\r\n      {...props}\r\n    />\r\n    {touched[field.name] && errors[field.name] && (\r\n      <Warn>{errors[field.name]}</Warn>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default CustomTextArea;\r\n","import PostService from \"../api/posts-service\";\r\nimport { latestPosts } from \"../constants/common\";\r\n\r\nconst getAllPostsOrdered = (id) => {\r\n  return PostService.getAllPosts()\r\n    .then((res) => {\r\n      return res.data.pagination.total;\r\n    })\r\n    .then((total) => {\r\n      const skip = id ? 0 : total - latestPosts;\r\n      return PostService.getAllPosts(latestPosts, skip, id).then((res) => {\r\n        return (res.data?.data || []).reverse();\r\n      });\r\n    });\r\n};\r\n\r\nexport default getAllPostsOrdered;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport const latestPosts = 50;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport PostService from \"../api/posts-service\";\r\nimport CustomInputComponent from \"./CustomInputComponent/CustomInputComponent\";\r\nimport CustomTextArea from \"./CustomTextArea\";\r\nimport getAllPostsOrdered from \"../utils/getAllPostsOrdered\";\r\nimport Button from \"../style/Button.styled\";\r\nimport InputWrapper from \"../style/InputWrapper.styled\";\r\nimport Title from \"../style/Title.styled\";\r\n\r\nconst addPostSchema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .min(5, \"Too Short!\")\r\n    .max(30, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  description: Yup.string()\r\n    .min(5, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  fullText: Yup.string()\r\n    .min(30, \"Too Short!\")\r\n    .max(100, \"Too Long!\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nfunction AddPost(props) {\r\n  const { postId, setPostData, setAllPosts } = props;\r\n  const handleAddPost = (values, { resetForm }) => {\r\n    if (postId) {\r\n      props\r\n        .method(props.postId, values.title, values.description, values.fullText)\r\n        .then(() => {\r\n          PostService.getSinglePost(postId).then((res) => {\r\n            setPostData(res.data);\r\n          });\r\n          resetForm();\r\n        });\r\n    } else {\r\n      props\r\n        .method(values.title, values.description, values.fullText)\r\n        .then(() => {\r\n          getAllPostsOrdered().then(setAllPosts);\r\n          resetForm();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {postId && <Title>Add your post</Title>}\r\n        <Formik\r\n          initialValues={{\r\n            title: \"\",\r\n            description: \"\",\r\n            fullText: \"\",\r\n          }}\r\n          validationSchema={addPostSchema}\r\n          onSubmit={handleAddPost}\r\n        >\r\n          {() => (\r\n            <Form className=\"addPost-form\">\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"title\"\r\n                  component={CustomInputComponent}\r\n                  placeholder=\"Enter title\"\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"description\"\r\n                  component={CustomInputComponent}\r\n                  placeholder=\"Enter description\"\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"fullText\"\r\n                  placeholder=\"Enter text\"\r\n                  component={CustomTextArea}\r\n                />\r\n              </InputWrapper>\r\n              <Button styled width=\"100px\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPost;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport default Wrapper;\r\n","import styled from \"styled-components\";\r\n\r\nconst NotLoggedMessage = styled.div`\r\n  background-color: #d1495b;\r\n  color: #c9d1d9;\r\n  text-align: center;\r\n`;\r\n\r\nexport default NotLoggedMessage;\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Operations = styled.div`\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px solid gray;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const PostsToggle = styled.div`\r\n  display: flex;\r\n  min-width: 200px;\r\n`;\r\n\r\nexport const SearchWrapper = styled.div`\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PaginatedPosts from \"../../components/PaginatedPosts/PaginatedPosts\";\r\nimport PostService from \"../../api/posts-service\";\r\nimport AddPost from \"../../components/AddPost\";\r\nimport getAllPostsOrdered from \"../../utils/getAllPostsOrdered\";\r\nimport Button from \"../../style/Button.styled\";\r\nimport Wrapper from \"../../style/Wrapper.styled\";\r\nimport NotLoggedMessage from \"../../style/NotLoggedMessage.styled\";\r\nimport Container from \"../../style/Container.styled\";\r\nimport { Operations, PostsToggle, SearchWrapper } from \"./Home.styled\";\r\nimport Input from \"../../style/Input.styled\";\r\n\r\nfunction Home() {\r\n  const [allPosts, setAllPosts] = useState([]);\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n  const { id } = useSelector((state) => state.auth);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAllPostsOrdered().then(setAllPosts);\r\n  }, []);\r\n\r\n  const handleMyPosts = () => {\r\n    getAllPostsOrdered(id).then(setAllPosts);\r\n  };\r\n\r\n  const handleAllPosts = () => {\r\n    getAllPostsOrdered().then(setAllPosts);\r\n  };\r\n\r\n  const handleOnSearchChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const handleOnSortChange = (e) => {\r\n    setSortKey(e.target.value);\r\n  };\r\n  return (\r\n    <Wrapper>\r\n      <Container>\r\n        <Operations>\r\n          <PostsToggle>\r\n            <Button\r\n              backgroundColor=\"transparent\"\r\n              type=\"button\"\r\n              onClick={handleAllPosts}\r\n              fontSize=\"20px\"\r\n              backgroundHover=\"transparent\"\r\n              colorHover=\"gray\"\r\n            >\r\n              All posts\r\n            </Button>\r\n            {isLoggedIn ? (\r\n              <Button\r\n                backgroundColor=\"transparent\"\r\n                type=\"button\"\r\n                onClick={handleMyPosts}\r\n                fontSize=\"20px\"\r\n                backgroundHover=\"transparent\"\r\n                colorHover=\"gray\"\r\n              >\r\n                My posts\r\n              </Button>\r\n            ) : null}\r\n          </PostsToggle>\r\n          <SearchWrapper>\r\n            <Input\r\n              type=\"text\"\r\n              marginRight=\"10px\"\r\n              value={search}\r\n              placeholder=\"Search\"\r\n              onChange={handleOnSearchChange}\r\n            />\r\n            <select onChange={handleOnSortChange}>\r\n              <option value=\"\" hidden>\r\n                Sort by\r\n              </option>\r\n              <option value=\"title\">title</option>\r\n              <option value=\"dateCreated\">date</option>\r\n            </select>\r\n          </SearchWrapper>\r\n        </Operations>\r\n        <PaginatedPosts allPosts={allPosts} search={search} sortKey={sortKey} />\r\n        {isLoggedIn ? (\r\n          <AddPost method={PostService.addPost} setAllPosts={setAllPosts} />\r\n        ) : (\r\n          <NotLoggedMessage>Please log in to leave a post</NotLoggedMessage>\r\n        )}\r\n      </Container>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import axios from \"./inst\";\r\n\r\nconst getAllComments = (postId) => {\r\n  return axios.get(`/comments/post/${postId}`);\r\n};\r\n\r\nconst addComment = (postId, text, followedCommentID) => {\r\n  return axios.post(`/comments/post/${postId}`, {\r\n    text,\r\n    followedCommentID,\r\n  });\r\n};\r\n\r\nconst deleteComment = (commentId) => {\r\n  return axios.delete(`/comments/${commentId}`);\r\n};\r\n\r\nconst editComment = (commentId, text) => {\r\n  return axios.patch(`/comments/${commentId}`, {\r\n    text,\r\n  });\r\n};\r\n\r\nconst likeComment = (commentId) => {\r\n  return axios.put(`/comments/like/${commentId}`);\r\n};\r\n\r\nexport default {\r\n  getAllComments,\r\n  addComment,\r\n  deleteComment,\r\n  editComment,\r\n  likeComment,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst AddCommentTitle = styled.div`\r\n  color: ${(props) => props.theme.fontColor};\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default AddCommentTitle;\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport CommentService from \"../../api/comment-service\";\r\nimport CustomTextArea from \"../CustomTextArea\";\r\nimport Button from \"../../style/Button.styled\";\r\nimport InputWrapper from \"../../style/InputWrapper.styled\";\r\nimport AddCommentTitle from \"./addComment.styled\";\r\n\r\nconst addCommentSchema = Yup.object().shape({\r\n  text: Yup.string()\r\n    .min(5, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nfunction AddComment({\r\n  postId,\r\n  followedCommentID,\r\n  setAllComments,\r\n  setShowReply,\r\n  setShowEdit,\r\n  method,\r\n  commentId,\r\n  backgroundDark,\r\n}) {\r\n  const handleAddComment = (values, { resetForm }) => {\r\n    if (commentId) {\r\n      method(commentId, values.text).then(() => {\r\n        CommentService.getAllComments(postId).then((res) => {\r\n          setAllComments(res.data);\r\n        });\r\n        resetForm();\r\n        setShowEdit(false);\r\n      });\r\n    } else {\r\n      method(postId, values.text, followedCommentID).then(() => {\r\n        CommentService.getAllComments(postId).then((res) => {\r\n          setAllComments(res.data);\r\n        });\r\n        resetForm();\r\n        if (setShowReply) {\r\n          setShowReply(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {!commentId &&\r\n          (postId === followedCommentID ? (\r\n            <AddCommentTitle>Add your comment</AddCommentTitle>\r\n          ) : (\r\n            <AddCommentTitle>Reply</AddCommentTitle>\r\n          ))}\r\n\r\n        <Formik\r\n          initialValues={{\r\n            text: \"\",\r\n          }}\r\n          validationSchema={addCommentSchema}\r\n          onSubmit={handleAddComment}\r\n        >\r\n          {() => (\r\n            <Form>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"text\"\r\n                  placeholder=\"Enter text\"\r\n                  component={CustomTextArea}\r\n                  backgroundDark={backgroundDark}\r\n                />\r\n              </InputWrapper>\r\n              <Button type=\"submit\" styled width=\"fit-content\">\r\n                Submit\r\n              </Button>\r\n              {setShowEdit && (\r\n                <Button\r\n                  type=\"button\"\r\n                  width=\"fit-content\"\r\n                  onClick={() => setShowEdit(false)}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddComment;\r\n","import styled from \"styled-components\";\r\n\r\nconst Services = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default Services;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PostImage = styled.div`\r\n  img {\r\n    max-width: 100%;\r\n    max-height: 500px;\r\n  }\r\n`;\r\n\r\nexport const ServicesWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CommentStyled = styled.div`\r\n  background-color: ${(props) => props.theme.comment};\r\n  margin-bottom: 20px;\r\n  padding: 15px 15px 8px 15px;\r\n  border-radius: 20px;\r\n  .comment-text {\r\n    margin-bottom: 10px;\r\n  }\r\n  .comment-meta {\r\n    color: gray;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n  }\r\n  .reply-comment {\r\n    margin-left: 50px;\r\n  }\r\n  .comment-meta {\r\n    font-size: 14px;\r\n  }\r\n  .comment-date {\r\n    text-align: end;\r\n  }\r\n`;\r\n\r\nexport const ReplyComment = styled.div`\r\n  margin-left: 50px;\r\n`;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable no-underscore-dangle */\r\nimport React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CommentService from \"../../api/comment-service\";\r\nimport AddComment from \"../addComment/addComment\";\r\nimport Button from \"../../style/Button.styled\";\r\nimport Services from \"../../style/Services.styled\";\r\nimport { ServicesWrapper } from \"../../pages/SinglePost/SinglePost.styled\";\r\nimport { CommentStyled, ReplyComment } from \"./Comment\";\r\n\r\nfunction Comments({\r\n  _id,\r\n  text,\r\n  dateCreated,\r\n  commentedBy,\r\n  likes,\r\n  allComments,\r\n  postId,\r\n  setAllComments,\r\n}) {\r\n  const { id } = useSelector((state) => state.auth);\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n  const [isLiked, setIsLiked] = useState(null);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [showReply, setShowReply] = useState(false);\r\n  const [commentLikes, setCommentLikes] = useState(likes.length);\r\n\r\n  useEffect(() => {\r\n    if (likes.includes(id)) {\r\n      setIsLiked(true);\r\n    } else {\r\n      setIsLiked(false);\r\n    }\r\n  }, [id, likes]);\r\n\r\n  const handleOnDelete = (commentId) => {\r\n    CommentService.deleteComment(commentId).then(() => {\r\n      CommentService.getAllComments(postId).then((res) => {\r\n        setAllComments(res.data);\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleOnLike = (commentId) => {\r\n    CommentService.likeComment(commentId);\r\n    if (isLiked) {\r\n      setCommentLikes(commentLikes - 1);\r\n    } else {\r\n      setCommentLikes(commentLikes + 1);\r\n    }\r\n    setIsLiked(!isLiked);\r\n  };\r\n\r\n  const replyComments = useMemo(() => {\r\n    return allComments.filter((comment) => comment.followedCommentID === _id);\r\n  }, [allComments, _id]);\r\n\r\n  return (\r\n    <>\r\n      {showEdit ? (\r\n        <AddComment\r\n          setShowEdit={setShowEdit}\r\n          postId={postId}\r\n          method={CommentService.editComment}\r\n          commentId={_id}\r\n          setAllComments={setAllComments}\r\n        />\r\n      ) : (\r\n        <CommentStyled>\r\n          <div className=\"comment-entry\">\r\n            <p className=\"comment-text\">{text}</p>\r\n          </div>\r\n          <div className=\"comment-meta\">\r\n            <div className=\"comment-author\">\r\n              commented by {commentedBy || \"anon\"}\r\n            </div>\r\n            <div className=\"comment-date\">commented at {dateCreated}</div>\r\n          </div>\r\n          <ServicesWrapper>\r\n            <Button\r\n              styled\r\n              width=\"fit-content\"\r\n              type=\"button\"\r\n              onClick={() => isLoggedIn && handleOnLike(_id)}\r\n            >\r\n              {isLiked ? \"Unlike\" : \"Like\"} {commentLikes}\r\n            </Button>\r\n            <Services>\r\n              {isLoggedIn && (\r\n                <Button\r\n                  type=\"button\"\r\n                  width=\"fit-content\"\r\n                  onClick={() => setShowReply(!showReply)}\r\n                >\r\n                  Reply\r\n                </Button>\r\n              )}\r\n              {id === commentedBy && (\r\n                <>\r\n                  <Button\r\n                    type=\"button\"\r\n                    width=\"fit-content\"\r\n                    onClick={() => setShowEdit(true)}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Button\r\n                    type=\"button\"\r\n                    width=\"fit-content\"\r\n                    onClick={() => handleOnDelete(_id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </Services>\r\n          </ServicesWrapper>\r\n          {showReply && (\r\n            <AddComment\r\n              followedCommentID={_id}\r\n              postId={postId}\r\n              setAllComments={setAllComments}\r\n              setShowReply={setShowReply}\r\n              method={CommentService.addComment}\r\n              backgroundDark=\"backgroundDark\"\r\n            />\r\n          )}\r\n        </CommentStyled>\r\n      )}\r\n\r\n      <ReplyComment>\r\n        {replyComments.map((comment) => {\r\n          return (\r\n            <Comments\r\n              allComments={allComments}\r\n              key={comment._id}\r\n              {...comment}\r\n              postId={postId}\r\n              setAllComments={setAllComments}\r\n            />\r\n          );\r\n        })}\r\n      </ReplyComment>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable no-underscore-dangle */\r\nimport React, { useEffect, useState, createRef, useMemo } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostService from \"../../api/posts-service\";\r\nimport CommentService from \"../../api/comment-service\";\r\nimport AddPost from \"../../components/AddPost\";\r\nimport AddComment from \"../../components/addComment/addComment\";\r\nimport Comments from \"../../components/Comment/Comments\";\r\nimport Wrapper from \"../../style/Wrapper.styled\";\r\nimport Container from \"../../style/Container.styled\";\r\nimport Title from \"../../style/Title.styled\";\r\nimport PostStyled from \"../../style/Post.styled\";\r\nimport Button from \"../../style/Button.styled\";\r\nimport { PostImage, ServicesWrapper } from \"./SinglePost.styled\";\r\nimport {\r\n  PostDate,\r\n  PostDescr,\r\n  PostMeta,\r\n} from \"../../components/Post/Post.styled\";\r\nimport NotLoggedMessage from \"../../style/NotLoggedMessage.styled\";\r\n\r\nfunction SinglePost(props) {\r\n  const [postData, setPostData] = useState(null);\r\n  const [allComments, setAllComments] = useState([]);\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [postLikes, setPostLikes] = useState(null);\r\n  const [isLiked, setIsLiked] = useState(null);\r\n  const history = useHistory();\r\n  const { id } = useSelector((state) => state.auth);\r\n  const { isLoggedIn } = useSelector((state) => state.auth);\r\n  const fileInput = createRef();\r\n  const {\r\n    match: {\r\n      params: { post_id },\r\n    },\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    PostService.getSinglePost(post_id).then((res) => {\r\n      setPostData(res.data);\r\n      setPostLikes(res.data.likes.length);\r\n      if (res.data.likes.includes(id)) {\r\n        setIsLiked(true);\r\n      } else {\r\n        setIsLiked(false);\r\n      }\r\n    });\r\n    CommentService.getAllComments(post_id).then((res) => {\r\n      setAllComments(res.data);\r\n    });\r\n    return post_id;\r\n  }, [id, post_id]);\r\n\r\n  const handleOnDelete = (postId) => {\r\n    PostService.deletePost(postId).then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  const handleOnLike = (postId) => {\r\n    PostService.likePost(postId);\r\n    if (isLiked) {\r\n      setPostLikes(postLikes - 1);\r\n    } else {\r\n      setPostLikes(postLikes + 1);\r\n    }\r\n    setIsLiked(!isLiked);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    PostService.uploadImage(postData._id, fileInput.current.files[0]).then(\r\n      () => {\r\n        PostService.getSinglePost(post_id).then((res) => {\r\n          setPostData(res.data);\r\n          setPostLikes(res.data.likes.length);\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  const postComments = useMemo(() => {\r\n    return allComments.filter(\r\n      (comment) => comment.followedCommentID === post_id\r\n    );\r\n  }, [allComments, post_id]);\r\n\r\n  return postData ? (\r\n    <Wrapper>\r\n      <Container>\r\n        <PostStyled>\r\n          <div>\r\n            <Title styled>{postData.title}</Title>\r\n            {postData.image && (\r\n              <PostImage>\r\n                <img\r\n                  src={`${process.env.REACT_APP_IMAGE_SRC}${postData.image}`}\r\n                  alt=\"img\"\r\n                />\r\n              </PostImage>\r\n            )}\r\n            <PostDescr>{postData.description}</PostDescr>\r\n            <p>{postData.fullText}</p>\r\n          </div>\r\n          <PostMeta>\r\n            <div>Posted by {postData.postedBy}</div>\r\n            <PostDate>Posted at {postData.dateCreated}</PostDate>\r\n          </PostMeta>\r\n          <ServicesWrapper>\r\n            <Button\r\n              styled\r\n              width=\"fit-content\"\r\n              onClick={() => isLoggedIn && handleOnLike(postData._id)}\r\n              type=\"button\"\r\n            >\r\n              {isLiked ? \"Unlike\" : \"Like\"} {postLikes}\r\n            </Button>\r\n            {id === postData.postedBy && (\r\n              <div>\r\n                <Button\r\n                  onClick={() => setShowEdit(!showEdit)}\r\n                  type=\"button\"\r\n                  width=\"fit-content\"\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <Button\r\n                  onClick={() => handleOnDelete(postData._id)}\r\n                  type=\"button\"\r\n                  width=\"fit-content\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </ServicesWrapper>\r\n        </PostStyled>\r\n        {showEdit && (\r\n          <div>\r\n            <form onSubmit={handleSubmit}>\r\n              <input type=\"file\" ref={fileInput} />\r\n              <Button width=\"fit-content\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </form>\r\n            <AddPost\r\n              postId={postData._id}\r\n              method={PostService.editPost}\r\n              setPostData={setPostData}\r\n            />\r\n          </div>\r\n        )}\r\n        <div>\r\n          <Title>Comments</Title>\r\n          {postComments.map((comment) => {\r\n            return (\r\n              <Comments\r\n                allComments={allComments}\r\n                key={comment._id}\r\n                {...comment}\r\n                postId={post_id}\r\n                setAllComments={setAllComments}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        {isLoggedIn ? (\r\n          <AddComment\r\n            followedCommentID={post_id}\r\n            postId={post_id}\r\n            setAllComments={setAllComments}\r\n            method={CommentService.addComment}\r\n          />\r\n        ) : (\r\n          <NotLoggedMessage>Please log in to leave a post</NotLoggedMessage>\r\n        )}\r\n      </Container>\r\n    </Wrapper>\r\n  ) : (\r\n    <div>Loading... </div>\r\n  );\r\n}\r\n\r\nexport default SinglePost;\r\n","/* eslint-disable camelcase */\r\nimport axios from \"./inst\";\r\n\r\nconst getUser = (userId) => {\r\n  return axios.get(`/users/${userId}`);\r\n};\r\n\r\nconst getAllUsers = (limit = 500, skip = 0) => {\r\n  return axios.get(\"/users\", { params: { limit, skip } });\r\n};\r\n\r\nconst deleteUser = (userId) => {\r\n  return axios.delete(`/users/${userId}`);\r\n};\r\n\r\nconst editUser = (userId, values) => {\r\n  const { extraDetails, ...rest } = values;\r\n  return axios.patch(`/users/${userId}`, {\r\n    ...rest,\r\n    extra_details: values.extraDetails,\r\n  });\r\n};\r\n\r\nconst uploadAvatar = (userId, imageData) => {\r\n  const formData = new FormData();\r\n  formData.append(\"avatar\", imageData);\r\n  return axios.put(`/users/upload/${userId}`, formData, {\r\n    headers: {\r\n      \"Content-Type\": \"multipart/form-data\",\r\n    },\r\n  });\r\n};\r\n\r\nexport default { getUser, getAllUsers, deleteUser, editUser, uploadAvatar };\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { getUser } from \"../actions/auth\";\r\nimport UserService from \"../api/user-service\";\r\nimport CustomInputComponent from \"./CustomInputComponent/CustomInputComponent\";\r\nimport CustomTextArea from \"./CustomTextArea\";\r\nimport Button from \"../style/Button.styled\";\r\nimport InputWrapper from \"../style/InputWrapper.styled\";\r\n\r\nconst editProfileShema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(5, \"Too Short!\")\r\n    .max(30, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  details: Yup.string()\r\n    .min(5, \"Too Short!\")\r\n    .max(30, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  extraDetails: Yup.string()\r\n    .min(5, \"Too Short!\")\r\n    .max(30, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  profession: Yup.string()\r\n    .min(5, \"Too Short!\")\r\n    .max(30, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  skills: Yup.string()\r\n    .min(5, \"Too Short!\")\r\n    .max(30, \"Too Long!\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nfunction EditProfile() {\r\n  const { id } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const handleEditProfile = (values, { resetForm }) => {\r\n    UserService.editUser(id, values).then(() => {\r\n      dispatch(getUser());\r\n      resetForm();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"editProfile-wrapper\">\r\n      <div className=\"editProfile\">\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            extraDetails: \"\",\r\n            skills: \"\",\r\n            profession: \"\",\r\n            details: \"\",\r\n          }}\r\n          validationSchema={editProfileShema}\r\n          onSubmit={handleEditProfile}\r\n        >\r\n          {() => (\r\n            <Form>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"name\"\r\n                  component={CustomInputComponent}\r\n                  placeholder=\"Enter name\"\r\n                  backgroundDark=\"backgroundDark\"\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"profession\"\r\n                  component={CustomInputComponent}\r\n                  placeholder=\"Enter profession\"\r\n                  backgroundDark=\"backgroundDark\"\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"extraDetails\"\r\n                  component={CustomTextArea}\r\n                  placeholder=\"Enter extraDetails\"\r\n                  backgroundDark=\"backgroundDark\"\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"skills\"\r\n                  placeholder=\"Enter skills\"\r\n                  component={CustomTextArea}\r\n                  backgroundDark=\"backgroundDark\"\r\n                />\r\n              </InputWrapper>\r\n              <InputWrapper>\r\n                <Field\r\n                  name=\"details\"\r\n                  placeholder=\"Enter details\"\r\n                  component={CustomTextArea}\r\n                  backgroundDark=\"backgroundDark\"\r\n                />\r\n              </InputWrapper>\r\n              <Button styled width=\"fit-content\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","import styled from \"styled-components\";\r\n\r\nconst UserAvatar = styled.tr`\r\n  img {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n`;\r\n\r\nexport default UserAvatar;\r\n","import styled from \"styled-components\";\r\n\r\nconst UserInfo = styled.table`\r\n  background-color: ${(props) => props.theme.post};\r\n  border-radius: 20px;\r\n  padding: 10px;\r\n  display: inline-block;\r\n  margin: 0 0 10px 10px;\r\n  text-align: left;\r\n  max-width: 500px;\r\n  word-break: break-all;\r\n  line-height: 25px;\r\n`;\r\n\r\nexport default UserInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserData = styled.div`\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n  p {\r\n    line-height: 30px;\r\n  }\r\n`;\r\n\r\nexport const UserDataWrapper = styled.div`\r\n  background-color: ${(props) => props.theme.post};\r\n  max-width: 500px;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  margin: 50px auto;\r\n  form {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const UserServices = styled.div`\r\n  text-align: end;\r\n  margin-top: 10px;\r\n`;\r\n","/* eslint-disable camelcase */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUser, logout } from \"../../actions/auth\";\r\nimport UserService from \"../../api/user-service\";\r\nimport EditProfile from \"../../components/EditProfile\";\r\nimport Container from \"../../style/Container.styled\";\r\nimport Button from \"../../style/Button.styled\";\r\nimport UserAvatar from \"../../style/UserAvatar.styled\";\r\nimport UserInfo from \"../../style/UserInfo.styled\";\r\nimport { UserServices, UserDataWrapper, UserData } from \"./Profile.styled\";\r\n\r\nfunction Profile() {\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const {\r\n    id,\r\n    name,\r\n    email,\r\n    dateCreated,\r\n    details,\r\n    extra_details,\r\n    profession,\r\n    skills,\r\n    avatar,\r\n  } = useSelector((state) => state.auth);\r\n  const fileInput = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n  }, [dispatch]);\r\n\r\n  const handleOnDelete = () => {\r\n    UserService.deleteUser(id).then(() => {\r\n      dispatch(logout());\r\n    });\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    UserService.uploadAvatar(id, fileInput.current.files[0]).then(() => {\r\n      dispatch(getUser());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <UserDataWrapper>\r\n        <UserData>\r\n          <UserInfo>\r\n            <tbody>\r\n              {avatar && (\r\n                <UserAvatar>\r\n                  <td>\r\n                    <img\r\n                      src={`${process.env.REACT_APP_IMAGE_SRC}${avatar}`}\r\n                      alt=\"img\"\r\n                    />\r\n                  </td>\r\n                </UserAvatar>\r\n              )}\r\n\r\n              <tr>\r\n                <th>Username:</th>\r\n                <td>{name}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>UserId:</th>\r\n                <td>{id}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Email:</th>\r\n                <td>{email}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Details:</th>\r\n                <td>{details}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Extra:</th>\r\n                <td>{extra_details}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Profession:</th>\r\n                <td>{profession}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Skills:</th>\r\n                <td>{skills}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Created:</th>\r\n                <td>{dateCreated}</td>\r\n              </tr>\r\n            </tbody>\r\n          </UserInfo>\r\n        </UserData>\r\n        <UserServices>\r\n          <Button\r\n            type=\"button\"\r\n            width=\"50px\"\r\n            onClick={() => setShowEdit(!showEdit)}\r\n          >\r\n            Edit\r\n          </Button>\r\n          <Button type=\"button\" width=\"50px\" onClick={handleOnDelete}>\r\n            Delete\r\n          </Button>\r\n        </UserServices>\r\n        {showEdit ? (\r\n          <div>\r\n            <form onSubmit={handleOnSubmit}>\r\n              <input type=\"file\" ref={fileInput} />\r\n              <Button width=\"fit-content\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </form>\r\n            <EditProfile />\r\n          </div>\r\n        ) : null}\r\n      </UserDataWrapper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { useState, useEffect, useMemo } from \"react\";\r\nimport UserService from \"../api/user-service\";\r\nimport Wrapper from \"../style/Wrapper.styled\";\r\nimport { SearchWrapper, Operations } from \"./Home/Home.styled\";\r\nimport Input from \"../style/Input.styled\";\r\nimport UserInfo from \"../style/UserInfo.styled\";\r\nimport UserAvatar from \"../style/UserAvatar.styled\";\r\n\r\nfunction UsersList() {\r\n  const [allUsers, setAllUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    UserService.getAllUsers().then((res) => {\r\n      setAllUsers(res.data.data);\r\n    });\r\n  }, []);\r\n\r\n  const sorted = useMemo(() => {\r\n    return allUsers\r\n      .sort((a, b) => {\r\n        if (a[sortKey] > b[sortKey]) {\r\n          return -1;\r\n        }\r\n        if (a[sortKey] < b[sortKey]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      })\r\n      .filter((user) => {\r\n        if (user.name) {\r\n          return user.name.toLowerCase().includes(search.toLowerCase());\r\n        }\r\n        return null;\r\n      });\r\n  }, [allUsers, sortKey, search]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Operations>\r\n        <SearchWrapper>\r\n          <Input\r\n            type=\"text\"\r\n            value={search}\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n          <select onChange={(e) => setSortKey(e.target.value)}>\r\n            <option value=\"\" hidden>\r\n              Sort by\r\n            </option>\r\n            <option value=\"name\">username</option>\r\n            <option value=\"dateCreated\">dateCreated</option>\r\n          </select>\r\n        </SearchWrapper>\r\n      </Operations>\r\n      <div>\r\n        {sorted.map((user) => {\r\n          return (\r\n            <UserInfo key={user._id}>\r\n              <tbody>\r\n                {user.avatar && (\r\n                  <UserAvatar>\r\n                    <td>\r\n                      <img\r\n                        src={`${process.env.REACT_APP_IMAGE_SRC}${user.avatar}`}\r\n                        alt=\"img\"\r\n                      />\r\n                    </td>\r\n                  </UserAvatar>\r\n                )}\r\n                <tr>\r\n                  <th>Username:</th>\r\n                  <td>{user.name}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>UserId:</th>\r\n                  <td>{user._id}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Email:</th>\r\n                  <td>{user.email}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Details:</th>\r\n                  <td>{user.details}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Extra:</th>\r\n                  <td>{user.extra_details}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Profesion:</th>\r\n                  <td>{user.profession}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Skills:</th>\r\n                  <td>{user.skills}</td>\r\n                </tr>\r\n                <tr>\r\n                  <th>Created:</th>\r\n                  <td>{user.dateCreated}</td>\r\n                </tr>\r\n              </tbody>\r\n            </UserInfo>\r\n          );\r\n        })}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { getFromStorage } from \"./global\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      getFromStorage(\"token\") ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url(\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600&display=swap\");\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nbody {\r\n  font-family: \"Open Sans\", sans-serif;\r\n  color: ${(props) => props.theme.fontColor};\r\n  background-color: ${(props) => props.theme.body};\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.fontColor};\r\n  font-weight: 600;\r\n}\r\n\r\na:hover {\r\n  color: none;\r\n}\r\n\r\ntextarea,\r\ninput {\r\n  background-color: ${(props) => props.theme.input} !important;\r\n}\r\n\r\ntextarea:focus,\r\ninput:focus {\r\n  outline: 1px solid rebeccapurple;\r\n}\r\nselect,\r\noption {\r\n  background-color: ${(props) => props.theme.body};\r\n  outline: none;\r\n  border: none;\r\n  color: ${(props) => props.theme.fontColor};\r\n}\r\n.Toastify__toast-icon {\r\n  width: 12px !important;\r\n}\r\n\r\n.Toastify__toast {\r\n  width: 109px !important;\r\n  min-height: 28px !important;\r\n  background-color: ${(props) => props.theme.post} !important;\r\n  font-size: 15px !important;\r\n  padding: 0 !important;\r\n  color: ${(props) => props.theme.fontColor} !important;\r\n}\r\n.Toastify__toast-container--bottom-right {\r\n  bottom: 0em !important; \r\n  right: -12em !important;\r\n}\r\ntd {\r\n  padding-left: 20px;\r\n}\r\n.password {\r\n  padding: 10px;\r\n  background-color: #0d1117;\r\n  border: none;\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  color: #c9d1d9;\r\n}\r\n\r\n.toggle-button {\r\n position: relative;\r\n display: inline-block;\r\n width: 37px;\r\n height: 18px;\r\n margin: 10px 0 0 10px;\r\n vertical-align: top;\r\n background-color: #161b22;\r\n border: none;\r\n border-radius: 30px;\r\n outline: none;\r\n cursor: pointer;\r\n appearance: none;\r\n}\r\n\r\n.toggle-button::after {\r\n  content: \"\";\r\n\r\n  display: inline-block;\r\n  position: absolute;\r\n\r\n  width: 18px;\r\n  height: 18px;\r\n  background-color: blue;\r\n  border-radius: 50%;\r\n\r\n  transform: translateX(0);\r\n}\r\n.toggle-button:checked::after {\r\n  transform: translateX(calc(100% + 4px));\r\n  background-color: gray;  \r\n}\r\n.toggle-button:checked {\r\n  background-color: #161b22;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const LightTheme = {\r\n  header: \"blue\",\r\n  body: \"#c9d1d9\",\r\n  fontColor: \"#000\",\r\n  post: \"#A7B0CA\",\r\n  comment: \"#A7B0CA\",\r\n  input: \"#fff\",\r\n};\r\n\r\nexport const DarkTheme = {\r\n  header: \"#161b22\",\r\n  body: \"#0d1117\",\r\n  fontColor: \"#c9d1d9\",\r\n  post: \"#161b22\",\r\n  comment: \"#161b22\",\r\n  input: \"\",\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDarkTheme, setLightTheme } from \"../../actions/theme\";\r\nimport Header from \"../Header/Header\";\r\nimport Login from \"../../pages/Login\";\r\nimport Register from \"../../pages/Signup\";\r\nimport Home from \"../../pages/Home/Home\";\r\nimport SinglePost from \"../../pages/SinglePost/SinglePost\";\r\nimport Profile from \"../../pages/Profile/Profile\";\r\nimport UsersList from \"../../pages/UsersList\";\r\nimport PrivateRoute from \"../../utils/PrivateRoute\";\r\nimport GlobalStyle from \"../../style/global\";\r\nimport { LightTheme, DarkTheme } from \"../../style/themes\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const { theme } = useSelector((state) => state.theme);\r\n\r\n  const themeToggler = () => {\r\n    if (theme === \"Light\") {\r\n      dispatch(setDarkTheme());\r\n    } else {\r\n      dispatch(setLightTheme());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === \"Light\" ? LightTheme : DarkTheme}>\r\n      <GlobalStyle />\r\n      <Router>\r\n        <Header />\r\n        <div>\r\n          <input\r\n            onClick={themeToggler}\r\n            type=\"checkbox\"\r\n            id=\"toggle-button\"\r\n            className=\"toggle-button\"\r\n          />\r\n        </div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/posts/:post_id\" component={SinglePost} />\r\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n          <PrivateRoute exact path=\"/users-list\" component={UsersList} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { DARK_THEME, LIGHT_THEME } from \"./types\";\r\n\r\nexport const setDarkTheme = () => ({\r\n  type: DARK_THEME,\r\n});\r\n\r\nexport const setLightTheme = () => ({\r\n  type: LIGHT_THEME,\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport store from \"./store\";\r\nimport App from \"./components/App/App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <ToastContainer />\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}